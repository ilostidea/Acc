package com.bit.acc.model;

// default package
// Generated 2017-11-20 23:52:31 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Accountingstandard generated by hbm2java
 */
@Entity
@DynamicInsert(true)
@DynamicUpdate(true)
@Table(name = "accountingStandard", catalog = "acc")
@JsonIgnoreProperties(value={"createTime", "creator", "modifyTime", "modifier"}/*, ignoreUnknown = true*/)
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE, region="accStandardCache")
@Cacheable(true)
public class AccountingStandard implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1838300243542646911L;

	@Id
    @GeneratedValue(generator="idgen")
	@GenericGenerator(name="idgen", strategy = "increment")
	@Column(name = "ID", unique = true, nullable = false)
	private Long id;
	
	@Column(name = "Name", nullable = false, length = 50)
	private String name;
	
	@Column(name = "Abbr", nullable = false, length = 20)
	private String abbr;
	
	@Column(name = "Code", nullable = false, length = 20)
	private String code;
	
	@Column(name = "ExeYear")
	private Integer exeYear;
	
	@Column(name = "Status", nullable = false)
	private Boolean status;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreateTime", updatable = false, length = 19)
	@org.hibernate.annotations.CreationTimestamp
	private Date createTime;
	
	@Column(name = "Creator")
	private Long creator;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifyTime", length = 19)
	@org.hibernate.annotations.UpdateTimestamp
	private Date modifyTime;
	
	@Column(name = "Modifier")
	private Long modifier;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountingStandard")
	private Set<FinancialReport> financialReports = new HashSet<FinancialReport>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountingStandard")
	private Set<GeneralPrinciple> generalPrinciples = new HashSet<GeneralPrinciple>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountingStandard")
	private Set<SpecificStandard> specificStandards = new HashSet<SpecificStandard>(0);
	
	/**
	   *注：如果一个实体需要二级缓存，若该实体含有<set...>，<list...>等属性时，也必须要指定缓存策略。
	  */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountingStandard")
    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	private Set<COA> COAs = new HashSet<COA>(0);

	public AccountingStandard() {
	}

	public AccountingStandard(Long id, String name, String abbr, String code, Boolean status) {
		this.id = id;
		this.name = name;
		this.abbr = abbr;
		this.code = code;
		this.status = status;
	}

	public AccountingStandard(Long id, String name, String abbr, String code, Integer exeYear, Boolean status,
			Date createTime, Long creator, Date modifyTime, Long modifier,
			Set<FinancialReport> financialReports,
			Set<GeneralPrinciple> generalPrinciples,
			Set<SpecificStandard> specificStandards, Set<COA> COAs) {
		this.id = id;
		this.name = name;
		this.abbr = abbr;
		this.code = code;
		this.exeYear = exeYear;
		this.status = status;
		this.createTime = createTime;
		this.creator = creator;
		this.modifyTime = modifyTime;
		this.modifier = modifier;
		this.financialReports = financialReports;
		this.generalPrinciples = generalPrinciples;
		this.specificStandards = specificStandards;
		this.COAs = COAs;
	}

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	public String getAbbr() {
		return abbr;
	}

	public void setAbbr(String abbr) {
		this.abbr = abbr;
	}

	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	public Integer getExeYear() {
		return this.exeYear;
	}

	public void setExeYear(Integer exeYear) {
		this.exeYear = exeYear;
	}
	
	public Boolean isStatus() {
		return status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	public Long getCreator() {
		return this.creator;
	}

	public void setCreator(Long creator) {
		this.creator = creator;
	}

	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	public Long getModifier() {
		return this.modifier;
	}

	public void setModifier(Long modifier) {
		this.modifier = modifier;
	}

	public Set<FinancialReport> getFinancialReports() {
		return this.financialReports;
	}

	public void setFinancialReports(Set<FinancialReport> financialReports) {
		this.financialReports = financialReports;
	}

	public Set<GeneralPrinciple> getGeneralPrinciples() {
		return this.generalPrinciples;
	}

	public void setGeneralPrinciples(Set<GeneralPrinciple> generalPrinciples) {
		this.generalPrinciples = generalPrinciples;
	}

	public Set<SpecificStandard> getSpecificStandards() {
		return this.specificStandards;
	}

	public void setSpecificStandards(Set<SpecificStandard> specificStandards) {
		this.specificStandards = specificStandards;
	}

	public Set<COA> getCOAs() {
		return this.COAs;
	}

	public void setCOAs(Set<COA> COAs) {
		this.COAs = COAs;
	}

}
