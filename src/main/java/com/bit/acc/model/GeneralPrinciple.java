package com.bit.acc.model;

// default package
// Generated 2017-11-20 23:52:31 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.LazyToOne;
import org.hibernate.annotations.LazyToOneOption;
import org.hibernate.annotations.Type;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Generalprinciple generated by hbm2java
 */
@Entity
@DynamicInsert(true)
@DynamicUpdate(true)
@Table(name = "generalPrinciple", catalog = "acc")
@JsonIgnoreProperties(value={"createTime", "creator", "modifyTime", "modifier"}/*, ignoreUnknown = true*/)
public class GeneralPrinciple implements java.io.Serializable {
	
	private static final long serialVersionUID = -7347053938654830489L;

	@Id
    @GeneratedValue(generator="idgen")
	@GenericGenerator(name="idgen", strategy = "increment")
	@Column(name = "ID", unique = true, nullable = false)
	private long id;

	@ManyToOne(optional = true, fetch = FetchType.LAZY)
	@LazyToOne(LazyToOneOption.PROXY)
	@Fetch(FetchMode.SELECT)
	@JoinColumn(name = "AccountingStandardID", referencedColumnName="ID", nullable = false)
	private AccountingStandard accountingStandard;

	@Column(name = "Title", length = 50)
	private String title;

	@Type(type="text")
	@Column(name = "GeneralPrinciple", nullable = false, length = 65535)
	private String generalPrinciple;

	@Column(name = "Status", nullable = false)
	private boolean status;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreateTime", updatable = false, length = 19)
	@org.hibernate.annotations.CreationTimestamp
	private Date createTime;

	@Column(name = "Creator")
	private Long creator;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifyTime", length = 19)
	@org.hibernate.annotations.UpdateTimestamp
	private Date modifyTime;
	
	@Column(name = "Modifier")
	private Long modifier;

	public GeneralPrinciple() {
	}

	public GeneralPrinciple(long id, AccountingStandard accountingStandard,
			String generalPrinciple, boolean status) {
		this.id = id;
		this.accountingStandard = accountingStandard;
		this.generalPrinciple = generalPrinciple;
		this.status = status;
	}

	public GeneralPrinciple(long id, AccountingStandard accountingStandard,
			String title, String generalPrinciple, boolean status,
			Date createTime, Long creator, Date modifyTime, Long modifier) {
		this.id = id;
		this.accountingStandard = accountingStandard;
		this.title = title;
		this.generalPrinciple = generalPrinciple;
		this.status = status;
		this.createTime = createTime;
		this.creator = creator;
		this.modifyTime = modifyTime;
		this.modifier = modifier;
	}

	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public AccountingStandard getAccountingStandard() {
		return this.accountingStandard;
	}

	public void setAccountingStandard(AccountingStandard accountingStandard) {
		this.accountingStandard = accountingStandard;
	}

	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getGeneralPrinciple() {
		return this.generalPrinciple;
	}

	public void setGeneralPrinciple(String generalPrinciple) {
		this.generalPrinciple = generalPrinciple;
	}

	public boolean isStatus() {
		return this.status;
	}

	public void setStauts(boolean status) {
		this.status = status;
	}

	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	public Long getCreator() {
		return this.creator;
	}

	public void setCreator(Long creator) {
		this.creator = creator;
	}

	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	public Long getModifier() {
		return this.modifier;
	}

	public void setModifier(Long modifier) {
		this.modifier = modifier;
	}

}
