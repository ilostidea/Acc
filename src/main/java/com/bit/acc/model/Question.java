package com.bit.acc.model;
// Generated 2018-2-3 19:27:28 by Hibernate Tools 5.2.6.Final

import com.bit.common.model.StringArrayAttributeConverter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.hibernate.annotations.*;

import javax.persistence.*;
import javax.persistence.Entity;
import javax.persistence.Table;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name = "Question", catalog = "acc")
@DynamicInsert(true)
@DynamicUpdate(true)
@JsonIgnoreProperties(value = {"creator", "createTime", "modifier", "questionCollecteds"}/*, ignoreUnknown = true*/)
@NamedEntityGraphs({
        @NamedEntityGraph(name = "question.answers.pumpscount",
                attributeNodes = {//attributeNodes 来定义需要加载的关联属性
                        //@NamedAttributeNode("questionCollecteds"),
                        @NamedAttributeNode(value = "answers", subgraph = "pumps")
                },
                subgraphs = {//subgraphs 来定义关联对象的属性
                        @NamedSubgraph(name = "pumps", attributeNodes = @NamedAttributeNode("pumps"))/*,
                    @NamedSubgraph(name = "answer",//两层延伸
                            attributeNodes = @NamedAttributeNode( value = "answer", subgraph = "pumps")
                    ) */
                }
        ),
        @NamedEntityGraph(name = "question.user",
                attributeNodes = @NamedAttributeNode("user")
        )
})
public class Question implements java.io.Serializable, Comparable<Question> {

    /**
     * auto generated
     */
    private static final long serialVersionUID = 116487971975059611L;
    private Long id;
    private SysUser user;
    private String title;
    private String question;
    private String[] tag;
    private Boolean isAnonymous;
    private Integer approveCount;
    private Integer disapproveCount;
    private Integer answerCount;
    private Integer collectedCount;
    private Boolean isAccused;
    private Boolean status;
    private Date createTime;
    private Long creator;
    private Date modifyTime;
    private Long modifier;
    private Set<Answer> answers = new HashSet<Answer>(0);
    private Set<QuestionCollected> questionCollecteds = new HashSet<QuestionCollected>(0);
    private Boolean hasCollected;//当前用户是否已关注该问题

    public Question() {
    }

    public Question(Long id, SysUser user, String title, String question, Boolean isAnonymous, Integer approveCount,
                    Integer disapproveCount, Integer answerCount, Integer collectedCount, Boolean isAccused) {
        this.id = id;
        this.user = user;
        this.title = title;
        this.question = question;
        this.isAnonymous = isAnonymous;
        this.approveCount = approveCount;
        this.disapproveCount = disapproveCount;
        this.answerCount = answerCount;
        this.collectedCount = collectedCount;
        this.isAccused = isAccused;
    }

    public Question(Long id, SysUser user, String title, String question, Boolean isAnonymous, Integer approveCount,
                    Integer disapproveCount, Integer answerCount, Integer collectedCount, Boolean isAccused, Boolean status, Date createTime, Long creator, Date modifyTime,
                    Long modifier) {
        this.id = id;
        this.user = user;
        this.title = title;
        this.question = question;
        this.isAnonymous = isAnonymous;
        this.approveCount = approveCount;
        this.disapproveCount = disapproveCount;
        this.answerCount = answerCount;
        this.collectedCount = collectedCount;
        this.isAccused = isAccused;
        this.status = status;
        this.createTime = createTime;
        this.creator = creator;
        this.modifyTime = modifyTime;
        this.modifier = modifier;
    }

    public Question(Long id, SysUser user, String title, String question, Boolean isAnonymous, Integer approveCount,
                    Integer disapproveCount, Integer answerCount, Integer collectedCount, Boolean isAccused, Boolean status, Date createTime, Long creator, Date modifyTime,
                    Long modifier, List<Answer> answers/*, Set<QuestionCollected> questionCollecteds*/) {
        this.id = id;
        this.user = user;
        this.title = title;
        this.question = question;
        this.isAnonymous = isAnonymous;
        this.approveCount = approveCount;
        this.disapproveCount = disapproveCount;
        this.isAccused = isAccused;
        this.status = status;
        this.createTime = createTime;
        this.creator = creator;
        this.modifyTime = modifyTime;
        this.modifier = modifier;
        this.answers = new HashSet<Answer>(answers);
        //this.questionCollecteds = questionCollecteds;
    }

    @Id
    @GeneratedValue(generator = "idgen")
    @GenericGenerator(name = "idgen", strategy = "increment")
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "UserID", nullable = false)
    public SysUser getUser() {
        return this.user;
    }

    public void setUser(SysUser user) {
        this.user = user;
    }

    @Column(name = "Title", nullable = false, length = 200)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @Type(type = "text")
    @Column(name = "Question", nullable = false, length = 65535)
    public String getQuestion() {
        return this.question;
    }

    public void setQuestion(String question) {
        this.question = question;
    }


    @Column(name = "Tag")
    @Convert(converter = StringArrayAttributeConverter.class)
    public String[] getTag() {
        return this.tag;
    }

    public void setTag(String[] tag) {
        this.tag = tag;
    }

    @Column(name = "IsAnonymous", nullable = false)
    public Boolean isIsAnonymous() {
        return this.isAnonymous;
    }

    public void setIsAnonymous(Boolean isAnonymous) {
        this.isAnonymous = isAnonymous;
    }

    @Column(name = "ApproveCount", nullable = false)
    public Integer getApproveCount() {
        return this.approveCount;
    }

    public void setApproveCount(Integer approveCount) {
        this.approveCount = approveCount;
    }

    @Column(name = "DisapproveCount", nullable = false)
    public Integer getDisapproveCount() {
        return this.disapproveCount;
    }

    public void setDisapproveCount(Integer disapproveCount) {
        this.disapproveCount = disapproveCount;
    }

    @Column(name = "AnswerCount", nullable = false)
    public Integer getAnswerCount() {
        return answerCount;
    }

    public void setAnswerCount(Integer answerCount) {
        this.answerCount = answerCount;
    }

    @Column(name = "CollectedCount", nullable = false)
    public Integer getCollectedCount() {
        return collectedCount;
    }

    public void setCollectedCount(Integer collectedCount) {
        this.collectedCount = collectedCount;
    }

    @Column(name = "IsAccused", nullable = false)
    public Boolean isIsAccused() {
        return this.isAccused;
    }

    public void setIsAccused(Boolean isAccused) {
        this.isAccused = isAccused;
    }

    @Column(name = "Status")
    public Boolean isStatus() {
        return this.status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CreateTime", length = 19)
    @CreationTimestamp
    public Date getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    @Column(name = "Creator")
    public Long getCreator() {
        return this.creator;
    }

    public void setCreator(Long creator) {
        this.creator = creator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "ModifyTime", length = 19)
    @UpdateTimestamp
    public Date getModifyTime() {
        return this.modifyTime;
    }

    public void setModifyTime(Date modifyTime) {
        this.modifyTime = modifyTime;
    }

    @Column(name = "Modifier")
    public Long getModifier() {
        return this.modifier;
    }

    public void setModifier(Long modifier) {
        this.modifier = modifier;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
    @Fetch(FetchMode.SUBSELECT)
    public Set<Answer> getAnswers() {
        return this.answers;
    }

    public void setAnswers(Set<Answer> answers) {
        this.answers = answers;
    }

    @Transient
    public Boolean isHasCollected() {
        return hasCollected;
    }

    public void setHasCollected(Boolean hasCollected) {
        this.hasCollected = hasCollected;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
    public Set<QuestionCollected> getQuestionCollecteds() {
        return this.questionCollecteds;
    }

    public void setQuestionCollecteds(Set<QuestionCollected> questionCollecteds) {
        this.questionCollecteds = questionCollecteds;
    }

    @Override
    public int compareTo(Question q) {
        return q.getCreateTime().compareTo(getCreateTime());
    }

}
